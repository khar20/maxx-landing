---
import Logo from './icons/Logo.astro';
import ThemeSelector from './ThemeSelector.astro';
import LangSelector from './LangSelector.astro';

const navItems = [
	{ 
		title: 'Servicios', 
		label: 'servicios', 
		url: '/services',
		hasDropdown: true,
		dropdownItems: [
			{ title: 'Desarrollo Web', url: '/web-development' },
			{ title: 'Desarrollo de Aplicaciones de Escritorio', url: '/app-development' }
		]
	},
	{ title: 'Precios', label: 'precios', url: '/pricing' },
	{ title: 'Contacto', label: 'contacto', url: '/contact' },
];
---

<header
	{...Astro.props}
	transition:persist
	class="sticky top-0 z-40 w-full border-b backdrop-blur header-main"
	style="background-color: #0f1157; border-color: rgba(255, 255, 255, 0.2);"
>
	<div
		class="container mx-auto flex h-16 items-center justify-between px-5 text-white"
	>
		<a
			class="flex h-10 items-center gap-2 text-white transition-all ease-in-out hover:scale-110"
			href="/"
		>
			<Logo class="h-10 text-white" />
		</a>

		<nav class="hidden gap-6 md:flex">
			{
				navItems.map((item) => (
					item.hasDropdown ? (
						<div class="relative group">
							<button
								class="relative flex items-center px-2 py-2 font-medium text-white transition-colors hover:text-blue-200"
								aria-label={item.label}
							>
								{item.title}
								<svg class="ml-1 h-4 w-4 fill-current" viewBox="0 0 20 20">
									<path d="M5.23 7.21a.75.75 0 011.06 0L10 10.94l3.71-3.73a.75.75 0 111.06 1.06l-4.24 4.25a.75.75 0 01-1.06 0L5.23 8.27a.75.75 0 010-1.06z"/>
								</svg>
							</button>
							<div class="dropdown-menu absolute left-0 top-full mt-1 w-64 rounded-md border border-white/20 shadow-lg opacity-0 invisible group-hover:opacity-100 group-hover:visible transition-all duration-200">
								{item.dropdownItems?.map((dropdownItem) => (
									<a
										class="block px-4 py-3 text-sm text-white hover:text-blue-200 hover:bg-white/10 first:rounded-t-md last:rounded-b-md"
										href={dropdownItem.url}
									>
										{dropdownItem.title}
									</a>
								))}
							</div>
						</div>
					) : (
						<a
							class="relative block px-2 py-2 font-medium text-white transition-colors hover:text-blue-200"
							aria-label={item.label}
							href={item.url}
						>
							{item.title}
						</a>
					)
				))
			}
		</nav>

		<div class="flex items-center gap-4">
			<ThemeSelector />
			<LangSelector />

			<!-- mobile menu button -->
			<button
				id="hamburger-button"
				class="flex items-center rounded border border-white/40 px-3 py-2 text-white hover:border-blue-200 hover:text-blue-200 md:hidden"
				aria-label="Toggle menu"
			>
				<svg
					class="h-6 w-6 fill-current"
					viewBox="0 0 20 20"
				>
					<path d="M0 3h20v2H0V3zm0 6h20v2H0V9zm0 6h20v2H0v-2z"
					></path>
				</svg>
			</button>
		</div>
	</div>

	<!-- mobile menu -->
	<nav
		id="mobile-menu"
		class="hidden relative z-40 px-5 py-4 md:hidden"
		style="background-color: #1519ed;"
	>
		{
			navItems.map((item) => (
				item.hasDropdown ? (
					<div class="block">
						<button
							class="mobile-dropdown-toggle flex w-full items-center justify-between px-2 py-2 font-medium text-white hover:text-blue-200"
							aria-label={item.label}
						>
							{item.title}
							<svg class="h-4 w-4 fill-current transition-transform" viewBox="0 0 20 20">
								<path d="M5.23 7.21a.75.75 0 011.06 0L10 10.94l3.71-3.73a.75.75 0 111.06 1.06l-4.24 4.25a.75.75 0 01-1.06 0L5.23 8.27a.75.75 0 010-1.06z"/>
							</svg>
						</button>
						<div class="mobile-dropdown-content hidden pl-4">
							{item.dropdownItems?.map((dropdownItem) => (
								<a
									class="block px-2 py-2 text-sm text-white/80 hover:text-blue-200"
									href={dropdownItem.url}
								>
									{dropdownItem.title}
								</a>
							))}
						</div>
					</div>
				) : (
					<a
						class="block px-2 py-2 font-medium text-white hover:text-blue-200"
						aria-label={item.label}
						href={item.url}
					>
						{item.title}
					</a>
				)
			))
		}
	</nav>
</header>

<style>
	/* MODO CLARO */
	/* Dropdown del men√∫ Servicios - fondo blanco, texto azul */
	.dropdown-menu {
		background-color: white;
		border-color: rgba(21, 25, 237, 0.2);
	}
	
	.dropdown-menu a {
		color: #0f1157 !important;
	}
	
	.dropdown-menu a:hover {
		background-color: rgba(21, 25, 237, 0.1) !important;
		color: #0f1157 !important;
	}
	
	/* Dropdowns de ThemeSelector y LangSelector - fondo blanco, texto azul */
	:global(.theme-selector-dropdown),
	:global(.lang-selector-dropdown),
	:global([data-dropdown]),
	:global(.dropdown),
	:global([role="menu"]),
	:global([role="listbox"]) {
		background-color: white !important;
		border-color: rgba(21, 25, 237, 0.2) !important;
	}
	
	/* Elementos dentro de los dropdowns - texto azul */
	:global(.theme-selector-dropdown *),
	:global(.lang-selector-dropdown *),
	:global([data-dropdown] *),
	:global(.dropdown *),
	:global([role="menu"] *),
	:global([role="listbox"] *) {
		color: #0f1157 !important;
	}
	
	/* Hover states para elementos de dropdown */
	:global(.theme-selector-dropdown button:hover),
	:global(.lang-selector-dropdown button:hover),
	:global([data-dropdown] button:hover),
	:global(.dropdown button:hover),
	:global([role="menu"] button:hover),
	:global([role="listbox"] button:hover) {
		background-color: rgba(21, 25, 237, 0.1) !important;
		color: #0f1157 !important;
	}
	
	/* MODO OSCURO */
	@media (prefers-color-scheme: dark) {
		.header-main {
			background-color: black !important;
		}
		
		header {
			background-color: black !important;
		}
		
		#mobile-menu {
			background-color: black !important;
		}
		
		.dropdown-menu {
			background-color: #6b7280 !important;
			border-color: rgba(255, 255, 255, 0.2) !important;
		}
		
		.dropdown-menu a {
			color: white !important;
		}
		
		.dropdown-menu a:hover {
			background-color: rgba(255, 255, 255, 0.1) !important;
			color: white !important;
		}
		
		:global(.theme-selector-dropdown),
		:global(.lang-selector-dropdown),
		:global([data-dropdown]),
		:global(.dropdown),
		:global([role="menu"]),
		:global([role="listbox"]) {
			background-color: #6b7280 !important;
			border-color: rgba(255, 255, 255, 0.2) !important;
		}
		
		:global(.theme-selector-dropdown *),
		:global(.lang-selector-dropdown *),
		:global([data-dropdown] *),
		:global(.dropdown *),
		:global([role="menu"] *),
		:global([role="listbox"] *) {
			color: white !important;
		}
		
		:global(.theme-selector-dropdown button:hover),
		:global(.lang-selector-dropdown button:hover),
		:global([data-dropdown] button:hover),
		:global(.dropdown button:hover),
		:global([role="menu"] button:hover),
		:global([role="listbox"] button:hover) {
			background-color: rgba(255, 255, 255, 0.1) !important;
			color: white !important;
		}
	}
	
	html.dark .header-main {
		background-color: black !important;
	}
	
	html.dark header {
		background-color: black !important;
	}
	
	html.dark #mobile-menu {
		background-color: black !important;
	}
	
	html.dark .dropdown-menu {
		background-color: #6b7280 !important;
		border-color: rgba(255, 255, 255, 0.2) !important;
	}
	
	html.dark .dropdown-menu a {
		color: white !important;
	}
	
	html.dark .dropdown-menu a:hover {
		background-color: rgba(255, 255, 255, 0.1) !important;
		color: white !important;
	}
	
	html.dark :global(.theme-selector-dropdown),
	html.dark :global(.lang-selector-dropdown),
	html.dark :global([data-dropdown]),
	html.dark :global(.dropdown),
	html.dark :global([role="menu"]),
	html.dark :global([role="listbox"]) {
		background-color: #6b7280 !important;
		border-color: rgba(255, 255, 255, 0.2) !important;
	}
	
	html.dark :global(.theme-selector-dropdown *),
	html.dark :global(.lang-selector-dropdown *),
	html.dark :global([data-dropdown] *),
	html.dark :global(.dropdown *),
	html.dark :global([role="menu"] *),
	html.dark :global([role="listbox"] *) {
		color: white !important;
	}
	
	html.dark :global(.theme-selector-dropdown button:hover),
	html.dark :global(.lang-selector-dropdown button:hover),
	html.dark :global([data-dropdown] button:hover),
	html.dark :global(.dropdown button:hover),
	html.dark :global([role="menu"] button:hover),
	html.dark :global([role="listbox"] button:hover) {
		background-color: rgba(255, 255, 255, 0.1) !important;
		color: white !important;
	}
</style>

<script is:inline>
	const hamburgerButton = document.getElementById('hamburger-button');
	const mobileMenu = document.getElementById('mobile-menu');

	if (hamburgerButton && mobileMenu) {
		hamburgerButton.addEventListener('click', (event) => {
			event.stopPropagation();
			mobileMenu.classList.toggle('hidden');
		});

		const menuLinks = mobileMenu.querySelectorAll('a');
		menuLinks.forEach((link) => {
			link.addEventListener('click', () => {
				mobileMenu.classList.add('hidden');
			});
		});

		// Handle mobile dropdown toggles
		const mobileDropdownToggles = mobileMenu.querySelectorAll('.mobile-dropdown-toggle');
		mobileDropdownToggles.forEach((toggle) => {
			toggle.addEventListener('click', (event) => {
				event.preventDefault();
				const content = toggle.nextElementSibling;
				const arrow = toggle.querySelector('svg');
				
				content.classList.toggle('hidden');
				arrow.classList.toggle('rotate-180');
			});
		});

		document.addEventListener('click', (event) => {
			const isClickInsideMenu = mobileMenu.contains(event.target);
			const isClickOnButton = hamburgerButton.contains(event.target);

			if (!isClickInsideMenu && !isClickOnButton) {
				mobileMenu.classList.add('hidden');
				// Reset mobile dropdowns
				const mobileDropdownContents = mobileMenu.querySelectorAll('.mobile-dropdown-content');
				const mobileDropdownArrows = mobileMenu.querySelectorAll('.mobile-dropdown-toggle svg');
				mobileDropdownContents.forEach(content => content.classList.add('hidden'));
				mobileDropdownArrows.forEach(arrow => arrow.classList.remove('rotate-180'));
			}
		});
	}
</script>