---
import Logo from './icons/Logo.astro';
import ThemeSelector from './ThemeSelector.astro';
import LangSelector from './LangSelector.astro';

const navItems = [
	{ title: 'Servicios', label: 'servicios', url: '/services' },
	{ title: 'Precios', label: 'precios', url: '/pricing' },
	{ title: 'Contacto', label: 'contacto', url: '/contact' },
];
---

<header
	{...Astro.props}
	transition:persist
	class="sticky top-0 z-40 w-full border-b bg-white/90 backdrop-blur dark:bg-black/90"
>
	<div
		class="container mx-auto flex h-16 items-center justify-between px-5 text-gray-600 dark:text-gray-200"
	>
		<a
			class="flex h-10 items-center gap-2 text-black transition-all ease-in-out hover:scale-110 dark:text-white"
			href="/"
		>
			<Logo class="h-10 text-black dark:text-white" />
		</a>

		<nav class="hidden gap-6 md:flex">
			{
				navItems.map((item) => (
					<a
						class="hover:text-primary relative block px-2 py-2 font-medium text-black transition-colors hover:text-blue-500 dark:text-white dark:hover:text-blue-500"
						aria-label={item.label}
						href={item.url}
					>
						{item.title}
					</a>
				))
			}
		</nav>

		<div class="flex items-center gap-4">
			<ThemeSelector />
			<LangSelector />

			<!-- mobile menu button -->
			<button
				id="hamburger-button"
				class="flex items-center rounded border border-gray-400 px-3 py-2 text-black hover:border-blue-500 hover:text-blue-500 md:hidden dark:text-white"
				aria-label="Toggle menu"
			>
				<svg
					class="h-6 w-6 fill-current"
					viewBox="0 0 20 20"
				>
					<path d="M0 3h20v2H0V3zm0 6h20v2H0V9zm0 6h20v2H0v-2z"
					></path>
				</svg>
			</button>
		</div>
	</div>

	<!-- mobile menu -->
	<nav
		id="mobile-menu"
		class="hidden relative z-40 bg-white px-5 py-4 md:hidden dark:bg-black"
	>
		{
			navItems.map((item) => (
				<a
					class="block px-2 py-2 font-medium text-black hover:text-blue-500 dark:text-white dark:hover:text-blue-500"
					aria-label={item.label}
					href={item.url}
				>
					{item.title}
				</a>
			))
		}
	</nav>
</header>

<script is:inline>
	const hamburgerButton = document.getElementById('hamburger-button');
	const mobileMenu = document.getElementById('mobile-menu');

	if (hamburgerButton && mobileMenu) {
		hamburgerButton.addEventListener('click', (event) => {
			event.stopPropagation();
			mobileMenu.classList.toggle('hidden');
		});

		const menuLinks = mobileMenu.querySelectorAll('a');
		menuLinks.forEach((link) => {
			link.addEventListener('click', () => {
				mobileMenu.classList.add('hidden');
			});
		});

		document.addEventListener('click', (event) => {
			const isClickInsideMenu = mobileMenu.contains(event.target);
			const isClickOnButton = hamburgerButton.contains(event.target);

			if (!isClickInsideMenu && !isClickOnButton) {
				mobileMenu.classList.add('hidden');
			}
		});
	}
</script>
