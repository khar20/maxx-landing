---
import Layout from '@layouts/Layout.astro';
import Header from '@components/Header.astro';
import SectionContainer from '@components/SectionContainer.astro';
import Footer from '@components/Footer.astro';
import { Image } from 'astro:assets';

// Asegúrate de que los IDs coincidan con los de tu componente Services.astro
const services = [
	{
		id: 'web-development',
		title: 'Desarrollo de Soluciones Web',
		description:
			'Creamos páginas personalizadas e impactante que capturan la atención de su público objetivo, maximizando las conversiones y reflejando la esencia de su marca.',
		features: [
			'Sitios web responsive adaptados a todos los dispositivos',
			'Optimización SEO para mejor visibilidad',
			'Diseño UI/UX centrado en la experiencia del usuario',
			'Integración con sistemas de gestión de contenido',
			'Desarrollo frontend y backend personalizado',
		],
		icon: 'web',
		transitionName: 'img1',
		image: 'https://placehold.co/100',
	},
	{
		id: 'desktop-applications',
		title: 'Desarrollo de Aplicaciones de Escritorio',
		description: 
			'Desarrollamos software a la medida de tus necesidades para optimizar los procesos internos de tu empresa y mejorar la productividad.',
		features: [
			'Aplicaciones multiplataforma (Windows, Mac, Linux)',
			'Interfaces intuitivas y fáciles de usar',
			'Integración con sistemas existentes',
			'Alta seguridad y protección de datos',
			'Soporte técnico continuo',
		],
		icon: 'desktop',
		transitionName: 'img2',
		image: 'https://placehold.co/100',
	},
	// Puedes añadir más servicios aquí
];
---

<Layout>
	<Header />
	<main
		transition:animate="slide"
		class="flex-1 text-gray-900 dark:border-white dark:bg-[#050814] dark:text-gray-200"
	>
		<SectionContainer
			id="services"
			class="flex min-h-screen w-full flex-col items-center justify-center from-[#0e173a] to-[#050814] px-4 py-16 dark:bg-linear-to-b"
		>
			<h1 class="text-4xl font-extrabold tracking-tight text-gray-900 sm:text-5xl dark:text-white mb-12">
				Nuestros Servicios
			</h1>

			<div class="w-full max-w-6xl">
				<div class="grid grid-cols-1 gap-8 md:grid-cols-2">
					{
						services.map((service) => (
							<div id={service.id} class="service-card flex h-full flex-col overflow-hidden rounded-lg border border-gray-200 bg-white p-6 shadow-sm transition-all hover:shadow-md dark:border-gray-800 dark:bg-gray-950">
								<div class="mb-4 flex items-center space-x-4">
									<div class="flex-shrink-0 rounded-full bg-gray-100 p-2 text-gray-700 dark:bg-gray-800 dark:text-gray-300">
										<svg
											xmlns="http://www.w3.org/2000/svg"
											width="24"
											height="24"
											viewBox="0 0 24 24"
											fill="none"
											stroke="currentColor"
											stroke-width="2"
											stroke-linecap="round"
											stroke-linejoin="round"
											class="lucide lucide-globe h-10 w-10"
										>
											<circle cx="12" cy="12" r="10"></circle>
											<path d="M12 2a14.5 14.5 0 0 0 0 20 14.5 14.5 0 0 0 0-20"></path>
											<path d="M2 12h20"></path>
										</svg>
									</div>
									<h3 class="text-xl font-bold">{service.title}</h3>
								</div>
								<p class="text-gray-600 dark:text-gray-400 mb-6">
									{service.description}
								</p>
								<div class="flex-grow">
									<h4 class="mb-3 font-medium text-gray-900 dark:text-white">
										Características
									</h4>
									<ul class="space-y-2">
										{service.features.map((feature) => (
											<li class="flex items-center">
												<span class="mr-2 text-green-500">
													✓
												</span>
												<span class="text-gray-600 dark:text-gray-300">
													{feature}
												</span>
											</li>
										))}
									</ul>
								</div>
								<div class="mt-6 flex items-center justify-end">
									<div class="relative h-32 w-32 overflow-hidden rounded-lg">
										<Image
											src={service.image}
											alt={service.title}
											transition:name={service.transitionName}
											class="object-cover h-full w-full"
											width={128}
											height={128}
											loading="lazy"
										/>
									</div>
								</div>
							</div>
						))
					}
				</div>
			</div>
		</SectionContainer>

		<SectionContainer
			id="contact"
			class="flex items-center justify-center p-4"
		>
			
		</SectionContainer>
	</main>
	<Footer />
</Layout>

<script>
// Script para resaltar el servicio seleccionado cuando se carga la página
// Usamos una función con nombre para evitar conflictos
function highlightSelectedService() {
  // Verifica si hay un hash en la URL
  if (window.location.hash) {
    const serviceId = window.location.hash.substring(1); // Elimina el # del hash
    const serviceElement = document.getElementById(serviceId);
    
    if (serviceElement) {
      // Elimina cualquier resaltado anterior
      document.querySelectorAll('.service-card').forEach(card => {
        if (card.id !== serviceId) {
          card.classList.remove('highlighted-service');
        }
      });
      
      // Añade un efecto de resaltado al servicio seleccionado
      serviceElement.classList.add('highlighted-service');
      
      // Scroll suave hacia el servicio con un pequeño offset para mejor visualización
      setTimeout(() => {
        serviceElement.scrollIntoView({ behavior: 'smooth', block: 'center' });
      }, 300);
    }
  }
}

// Utilizamos el evento view-transition-end para ejecutar nuestro código después de que
// se completen las transiciones de página
document.addEventListener('astro:after-swap', highlightSelectedService);

// También ejecutamos la función al cargar inicialmente la página
document.addEventListener('DOMContentLoaded', highlightSelectedService);
</script>

<style>
  /* Estilo para el servicio destacado */
  .highlighted-service {
    transform: scale(1.03);
    box-shadow: 0 0 20px rgba(59, 130, 246, 0.5);
    border: 2px solid #3b82f6;
    animation: highlight-pulse 2s infinite;
    z-index: 10;
    position: relative;
  }
  
  @keyframes highlight-pulse {
    0%, 100% {
      box-shadow: 0 0 20px rgba(59, 130, 246, 0.5);
    }
    50% {
      box-shadow: 0 0 30px rgba(59, 130, 246, 0.8);
    }
  }
  
  /* Transición suave para todas las tarjetas */
  .service-card {
    transition: all 0.5s ease-in-out;
  }
</style>